								ModelSerrializer Class
								=======================
The ModelSerrializer class provides a shortcut that lets you automatically create a Serializer class with fields that correspond to the Model fields.

The ModelSerrializer class is the same as a regular Serializer class, except that:

1. It will automatically generate a set of fields for you, based on the model.
2. It will automatically generate validators for the serializer, such as unique_together validators.
3. It includes simple default implementaions for create() and update().

								Create ModelSerrializer Class
								=============================
* Create a separate serializers.py file to write all serializers 

from rest_framework import serializers 
class StudentSerializer(serializers.ModelSerializer):
	class Meta:
		model = Student
		fields = ['id','name','roll','city']

* fields = '__all__'
* exclude = ['roll'] 



=====
from rest_framework import serializers
class StudentSerializer(serializers.ModelSrializer):
	name = serializers.CharField(read_only=True)
	class Meta:
		model = Student
		fields = ['id','name','roll','city']
		

Or 

from rest_framework import serializers
class StudentSerializer(serializers.ModelSrializer):
	class Meta:
		model = Student
		fields = ['id','name','roll','city']
		read_only_fields = ['name','roll'] 
		
OR: 
class StudentSerializer(serializers.ModelSerializer):
    # name = serializers.CharField(read_only=True)
    class Meta:
        model = Student
        fields = ['id','name','roll','city']
        # read_only_fields = ['name','roll']
        extra_kwargs = {'name':{'read_only':True}}
		
		
								ModelSerrializer Validation
								=============================
* 
from rest_framework import serializers
from .models import Student

def start_with_r(value):
    if value.lower()[0] != 'r':
        raise serializers.ValidationError("Nme Should be start with R")
    
class StudentSerializer(serializers.ModelSerializer):
    # def start_with_r(value):
    #     if value.lower()[0] != 'r':
    #         raise serializers.ValidationError("Nme Should be start with R")
    name = serializers.CharField(validators=[start_with_r])
    class Meta:
        model = Student
        fields = ['name','roll','city']

    def validate_roll(self, value):
        if value>= 200:
            raise serializers.ValidationError('Seat Full!!')
        return value
    
    def validate(self, data):
        nm = data.get('name')
        ct = data.get('city')
        if nm.lower() == 'roni' and ct.lower() != 'mymensingh':
            raise serializers.ValidationError('City must be Mymensingh')
        return data